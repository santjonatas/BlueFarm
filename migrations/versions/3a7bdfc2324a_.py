"""empty message

Revision ID: 3a7bdfc2324a
Revises: 
Create Date: 2024-09-13 17:33:52.406298

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3a7bdfc2324a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departamentos',
    sa.Column('area', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='bluefarm'
    )
    with op.batch_alter_table('departamentos', schema='bluefarm') as batch_op:
        batch_op.create_index(batch_op.f('ix_bluefarm_departamentos_id'), ['id'], unique=False)

    op.create_table('niveis',
    sa.Column('acesso', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='bluefarm'
    )
    with op.batch_alter_table('niveis', schema='bluefarm') as batch_op:
        batch_op.create_index(batch_op.f('ix_bluefarm_niveis_id'), ['id'], unique=False)

    op.create_table('pessoas',
    sa.Column('nome', sa.Text(), nullable=False),
    sa.Column('data_nascimento', sa.Date(), nullable=False),
    sa.Column('cpf', sa.String(length=100), nullable=False),
    sa.Column('genero', sa.String(length=25), nullable=True),
    sa.Column('telefone', sa.String(length=11), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('endereco', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('telefone'),
    schema='bluefarm'
    )
    with op.batch_alter_table('pessoas', schema='bluefarm') as batch_op:
        batch_op.create_index(batch_op.f('ix_bluefarm_pessoas_id'), ['id'], unique=False)

    op.create_table('cargos',
    sa.Column('id_nivel', sa.Integer(), nullable=True),
    sa.Column('funcao', sa.String(length=50), nullable=False),
    sa.Column('salario', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_nivel'], ['bluefarm.niveis.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bluefarm'
    )
    with op.batch_alter_table('cargos', schema='bluefarm') as batch_op:
        batch_op.create_index(batch_op.f('ix_bluefarm_cargos_id'), ['id'], unique=False)

    op.create_table('usuarios',
    sa.Column('id_pessoa', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('senha', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_pessoa'], ['bluefarm.pessoas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bluefarm'
    )
    with op.batch_alter_table('usuarios', schema='bluefarm') as batch_op:
        batch_op.create_index(batch_op.f('ix_bluefarm_usuarios_id'), ['id'], unique=False)

    op.create_table('funcionarios',
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('id_cargo', sa.Integer(), nullable=True),
    sa.Column('data_admissao', sa.Date(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_cargo'], ['bluefarm.cargos.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['bluefarm.usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bluefarm'
    )
    with op.batch_alter_table('funcionarios', schema='bluefarm') as batch_op:
        batch_op.create_index(batch_op.f('ix_bluefarm_funcionarios_id'), ['id'], unique=False)

    op.create_table('administradores',
    sa.Column('id_funcionario', sa.Integer(), nullable=True),
    sa.Column('id_departamento', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_departamento'], ['bluefarm.departamentos.id'], ),
    sa.ForeignKeyConstraint(['id_funcionario'], ['bluefarm.funcionarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bluefarm'
    )
    with op.batch_alter_table('administradores', schema='bluefarm') as batch_op:
        batch_op.create_index(batch_op.f('ix_bluefarm_administradores_id'), ['id'], unique=False)

    op.create_table('operadores',
    sa.Column('id_funcionario', sa.Integer(), nullable=True),
    sa.Column('id_supervisor', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_funcionario'], ['bluefarm.funcionarios.id'], ),
    sa.ForeignKeyConstraint(['id_supervisor'], ['bluefarm.administradores.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bluefarm'
    )
    with op.batch_alter_table('operadores', schema='bluefarm') as batch_op:
        batch_op.create_index(batch_op.f('ix_bluefarm_operadores_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('operadores', schema='bluefarm') as batch_op:
        batch_op.drop_index(batch_op.f('ix_bluefarm_operadores_id'))

    op.drop_table('operadores', schema='bluefarm')
    with op.batch_alter_table('administradores', schema='bluefarm') as batch_op:
        batch_op.drop_index(batch_op.f('ix_bluefarm_administradores_id'))

    op.drop_table('administradores', schema='bluefarm')
    with op.batch_alter_table('funcionarios', schema='bluefarm') as batch_op:
        batch_op.drop_index(batch_op.f('ix_bluefarm_funcionarios_id'))

    op.drop_table('funcionarios', schema='bluefarm')
    with op.batch_alter_table('usuarios', schema='bluefarm') as batch_op:
        batch_op.drop_index(batch_op.f('ix_bluefarm_usuarios_id'))

    op.drop_table('usuarios', schema='bluefarm')
    with op.batch_alter_table('cargos', schema='bluefarm') as batch_op:
        batch_op.drop_index(batch_op.f('ix_bluefarm_cargos_id'))

    op.drop_table('cargos', schema='bluefarm')
    with op.batch_alter_table('pessoas', schema='bluefarm') as batch_op:
        batch_op.drop_index(batch_op.f('ix_bluefarm_pessoas_id'))

    op.drop_table('pessoas', schema='bluefarm')
    with op.batch_alter_table('niveis', schema='bluefarm') as batch_op:
        batch_op.drop_index(batch_op.f('ix_bluefarm_niveis_id'))

    op.drop_table('niveis', schema='bluefarm')
    with op.batch_alter_table('departamentos', schema='bluefarm') as batch_op:
        batch_op.drop_index(batch_op.f('ix_bluefarm_departamentos_id'))

    op.drop_table('departamentos', schema='bluefarm')
    # ### end Alembic commands ###
